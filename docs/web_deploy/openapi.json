{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "actions-svc",
    "description": ""
  },
  "servers": [
    {
      "url": "https://api.demo.tokend.io",
      "description": "TokenD Developer Environment"
    }
  ],
  "paths": {
    "/integrations/ccp-svc": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "user",
        "operationId": "user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "$ref": "#/components/schemas/UsersGetRequest"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/responses/BadRequest"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    },
    "/integrations/ccp-svc/pdf": {
      "post": {
        "tags": [
          "Pdf"
        ],
        "summary": "pdf",
        "operationId": "pdf",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "type": "object",
                    "$ref": "#/components/schemas/PdfsCreateRequest"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/responses/BadRequest"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/responses/NotFound"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BadRequestError": {
        "type": "object",
        "required": [
          "title",
          "status",
          "code"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Short, human-readable summary of the problem",
            "example": "Bad Request"
          },
          "detail": {
            "type": "string",
            "description": "Human-readable explanation specific to this occurrence of the problem",
            "example": "Your request was invalid in some way."
          },
          "status": {
            "type": "integer",
            "description": "HTTP status code applicable to this problem",
            "enum": [
              400
            ]
          },
          "code": {
            "type": "string",
            "description": "Application-specific error code, expressed as a string value",
            "enum": [
              "bad_request",
              "bad_request_data"
            ]
          },
          "meta": {
            "type": "object",
            "description": "Object containing non-standard meta-information about the error",
            "example": {
              "error": "failed to verify issuer: failed to create a request: invalid url",
              "error_info": "Issuer check failed."
            }
          }
        }
      },
      "InternalError": {
        "type": "object",
        "required": [
          "title",
          "status",
          "code"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Short, human-readable summary of the problem",
            "example": "Internal Error"
          },
          "detail": {
            "type": "string",
            "description": "Human-readable explanation specific to this occurrence of the problem",
            "example": "Some internal error occurred. Please report this error to service maintainers."
          },
          "status": {
            "type": "integer",
            "description": "HTTP status code applicable to this problem",
            "enum": [
              500
            ]
          },
          "code": {
            "type": "string",
            "description": "Application-specific error code, expressed as a string value",
            "enum": [
              "internal_error"
            ]
          }
        }
      },
      "NotFoundError": {
        "type": "object",
        "required": [
          "title",
          "status",
          "code"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Short, human-readable summary of the problem",
            "example": "Not Found"
          },
          "detail": {
            "type": "string",
            "description": "Human-readable explanation specific to this occurrence of the problem",
            "example": "The requested resource could not be found."
          },
          "status": {
            "type": "integer",
            "description": "HTTP status code applicable to this problem",
            "enum": [
              404
            ]
          },
          "code": {
            "type": "string",
            "description": "Application-specific error code, expressed as a string value",
            "enum": [
              "not_found"
            ]
          }
        }
      },
      "UnauthorizedError": {
        "type": "object",
        "required": [
          "title",
          "status",
          "code"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Short, human-readable summary of the problem",
            "example": "Unauthorized"
          },
          "detail": {
            "type": "string",
            "description": "Human-readable explanation specific to this occurrence of the problem",
            "example": "Session token is invalid. It either has expired or is corrupted. Please log in and obtain a new one."
          },
          "status": {
            "type": "integer",
            "description": "HTTP status code applicable to this problem",
            "enum": [
              401
            ]
          },
          "code": {
            "type": "string",
            "description": "Application-specific error code, expressed as a string value",
            "enum": [
              "session_token_not_found",
              "session_token_invalid"
            ]
          }
        }
      },
      "PdfsCreateRequest": {
        "type": "object",
        "required": [
          "data",
          "url",
          "address"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/User",
                  "description": "user"
                }
              ]
            }
          },
          "url": {
            "type": "string",
            "format": "string",
            "example": "url"
          },
          "address": {
            "type": "string",
            "format": "string",
            "example": "bc3241dhf..."
          }
        }
      },
      "User": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserKey"
          },
          {
            "type": "object",
            "required": [
              "attributes"
            ],
            "properties": {
              "attributes": {
                "type": "object",
                "required": [
                  "Date",
                  "CourseTitle",
                  "Points",
                  "Participant",
                  "SerialNumber",
                  "Note",
                  "Certificate",
                  "DataHash",
                  "TxHash",
                  "Signature",
                  "DigitalCertificate",
                  "ID",
                  "Msg"
                ],
                "properties": {
                  "Date": {
                    "type": "string",
                    "format": "string",
                    "example": "02.12.2022"
                  },
                  "CourseTitle": {
                    "type": "string",
                    "format": "string",
                    "example": "Title of course"
                  },
                  "Points": {
                    "type": "string",
                    "format": "string",
                    "example": "99"
                  },
                  "Participant": {
                    "type": "string",
                    "format": "string",
                    "example": "99"
                  },
                  "SerialNumber": {
                    "type": "string",
                    "format": "string",
                    "example": "0xhhhhhhhhhhhhhhhhhhhhhhh"
                  },
                  "Note": {
                    "type": "string",
                    "format": "string",
                    "example": "string"
                  },
                  "Certificate": {
                    "type": "string",
                    "format": "string",
                    "example": "string"
                  },
                  "DataHash": {
                    "type": "string",
                    "format": "string",
                    "example": "string"
                  },
                  "TxHash": {
                    "type": "string",
                    "format": "string",
                    "example": "string"
                  },
                  "Signature": {
                    "type": "string",
                    "format": "string",
                    "example": "string"
                  },
                  "DigitalCertificate": {
                    "type": "string",
                    "format": "string",
                    "example": "string"
                  },
                  "ID": {
                    "type": "number",
                    "format": "int64",
                    "example": 1
                  },
                  "Msg": {
                    "type": "string",
                    "format": "string",
                    "example": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "UserKey": {
        "type": "object",
        "required": [
          "type",
          "id"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "user"
            ]
          },
          "id": {
            "type": "string",
            "example": "1"
          }
        }
      },
      "UsersGetRequest": {
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "url": {
            "type": "string",
            "example": ""
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BadRequestError"
                  }
                }
              }
            }
          }
        }
      },
      "InternalError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InternalError"
                  }
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotFoundError"
                  }
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "pageLimitParam": {
        "in": "query",
        "name": "page[limit]",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 15,
          "description": "Numbers of items per page to return."
        }
      },
      "pageNumberParam": {
        "in": "query",
        "name": "page[number]",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The number of a page to return."
      },
      "sortingParam": {
        "in": "query",
        "name": "page[order]",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc",
          "description": "Order of records on the page. If sortingParam is not specified, order of records is by default sorted by ID."
        }
      }
    }
  }
}
